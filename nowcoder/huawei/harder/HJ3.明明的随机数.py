""" HJ3 - 明明的随机数

# 描述

明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了 N 个 1 到 1000 之间的随机整数（ N <= 1000 ），
对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。
请你协助明明完成『去重』与『排序』的工作（同一个测试用例里可能会有多组数据（用于不同的调查），希望大家能正确处理）。

注：测试用例保证输入参数的正确性，答题者无需验证。测试用例不止一组。

当没有新的输入时，说明输入结束。

数据范围：1 <= n <= 1000，输入的数字大小满足 1 <= val <= 500

# 输入描述

注意：输入可能有多组数据（用于不同的调查）。每组数据都包括多行，第一行先输入随机整数的个数 N ，
接下来的 N 行再输入相应个数的整数。具体格式请看下面的示例。

# 输出描述

返回多行，处理后的结果。

# 示例

输入：
    3
    2
    2
    1
    11
    10
    20
    40
    32
    67
    40
    20
    89
    300
    400
    15
输出：
    1
    2
    10
    15
    20
    32
    40
    67
    89
    300
    400

说明：示例1包含了两个小样例！！

    第一个数字是3，也即这个小样例的N=3，说明用计算机生成了3个1到1000之间的随机整数，接下来每行一个随机数字，共3行，也即这3个随机数字为：
        2
        2
        1
    所以第一个小样例的输出为：
        1
        2
"""
from functools import reduce
from typing import List


def helper(a: List[int], b: int) -> List[int]:
    """ 规约函数 """
    # 由于 Pylance 语法检查无法判断空列表中各元素的类型，
    # 需要将规约函数单独定义并指定参数类型，
    # 可以直接写作 lambda 匿名形式
    return a if b in a else a + [b]


try:
    while True:
        n = int(input())
        # 获取所有输入数据
        array = [int(input()) for _ in range(n)]
        # 原地排序
        array.sort()
        # 重复元素必定相邻，借助归约操作去重
        array = reduce(helper, array, [])
        print(*array, sep='\n')
except Exception:
    pass
