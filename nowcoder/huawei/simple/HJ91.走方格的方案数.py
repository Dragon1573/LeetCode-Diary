""" HJ91 - 走方格的方案数

# 描述

请计算 n × m 的棋盘格子（n 为横向的格子数，m 为竖向的格子数）从棋盘左上角出发沿着边缘线从左上角走到右下角，总共有多少种走法？

要求：不能走回头路。即只能往右和往下走，不能往左和往上走。

注：沿棋盘格之间的边缘线行走。

本题含有多组样例输入。

数据范围：1 <= n, m <= 8

# 输入描述

每组样例输入两个正整数 n 和 m ，用空格隔开。

# 输出描述

每组样例输出一行结果。

# 示例

输入：
    2 2
    1 2
输出：
    6
    3
"""
from sys import stdin

for line in stdin:
    n, m = map(int, line.split())
    """ 动态规划 """
    # 上边界与左边界只有唯一的到达方式
    dp = [[1] * (m + 1) for _ in range(n + 1)]
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            # 一个格子只能来自左侧与上方
            dp[i][j] = dp[i - 1][j] + dp[i][j - 1]
    print(dp[n][m])
